services:

  ####################################################
  ############### Services ###########################
  ####################################################
  api-gateway:
    image: myaagent.azurecr.io/apigatewaydev
    container_name: api-gateway
    environment:
      PORT: 15000
      ENABLE_HTTPS: "false"
      USER_SERVICE_URL: http://user-service:15100
      AI_SERVICE_URL: http://ai-service:15200
      EXTENSION_SERVICE_URL: http://extension-service:15300
      ELASTICSEARCH_URL: http://elasticsearch:9200
      RABBITMQ_URL: amqp://root:root@rabbitmq:5672
      REDIS_URL: redis://root:root@redis:6379
      MICROSERVICE_TIMEOUT: 300000 # 5 minutes
    ports:
      - "15000:15000"
    restart: always

  user-service:
    image: aagent.azurecr.io/user-service:dev
    container_name: user-service
    environment:
      NODE_ENV: dev
      PORT: 15100
      MONGODB_CONNECTION_STRING: "mongodb://root:root@mongo-database:27017/user-service?authSource=admin"
      EMAIL_USERNAME: <EMAIL_USERNAME>
      EMAIL_PASSWORD: <EMAIL_PASSWORD>
      GOOGLE_APP_CLIENT_ID: <YOUR_GOOGLE_CLIENT_ID>
      GOOGLE_APP_CLIENT_SECRET: <YOUR_GOOGLE_CLIENT_SECRET>
      GOOGLE_APP_REDIRECT_URL: https://localhost:15000/user/api/v1/access/auth/google/grant-gmail-permission/callback
      FACEBOOK_APP_CLIENT_ID: <YOUR_FACEBOOK_CLIENT_ID>
      FACEBOOK_APP_CLIENT_SECRET: <YOUR_FACEBOOK_CLIENT_SECRET>
      FACEBOOK_APP_REDIRECT_URL: https://localhost:15000/user/api/v1/access/facebook/verify
      API_GATEWAY_URL: https://localhost:15000
      AI_SERVICE_URL: http://ai-service:15200
      JWT_SECRET: c667d2a6dfcc7fbf5efe64de40fdf3e37dc8a00c1311cf9c449922cb92e4858e0d7c0fa010c883c4ff3edeb89ccfd72c3fc7b9cdd287c7da2e163bde933b1cca
      CLIENT_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USER: default
      REDIS_PASSWORD: root

    ports:
      - "15100:15100"
    restart: always

  ai-service:
    image: aagent.azurecr.io/ai-service:dev
    container_name: ai-service
    environment:
      DEBUG_AGENT: False
      DEBUG_SERVER: False
      DEBUG_SQLALCHEMY: False
      LOGGING_LOG_LEVEL: INFO
      LLM_DEFAULT_PROVIDER: openai
      LLM_DEFAULT_MODEL: gpt-4o-mini
      LLM_DEFAULT_API_KEY: <YOUR_OPENAI_API_KEY>
      POSTGRES_HOST: ai-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: ai-database
      TOOL_TAVILY_API_KEY: <YOUR_TAVILY_API_KEY>
      COMPOSIO_LOGGING_LEVEL: debug
      COMPOSIO_API_KEY: <YOUR_COMPOSIO_API_KEY>
      COMPOSIO_REDIRECT_URL: https://localhost:15000/ai/api/v1/callback/extension
      FRONTEND_REDIRECT_URL: http://localhost:3000/callback/extension
    ports:
      - "15200:15200"
    restart: always

  extension-service:
    image: aagent.azurecr.io/extension-service:dev
    container_name: extension-service
    environment:
      NODE_ENV: dev
      PORT: 15300
      COMPOSIO_API_BASE_URL: https://backend.composio.dev/api
      COMPOSIO_API_KEY: d04n821zcnqtop53g98fx
      DATABASE_URL: mongodb://root:root@mongo-database:27017/datn-extension-db?authSource=admin
    ports:
      - "15300:15300"
    restart: always

  voice-service:
    image: myaagent.azurecr.io/voiceservicedev
    container_name: voice-service
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://+:15400
      SpeechOptions__GoogleCredential__Type: service_account
      SpeechOptions__GoogleCredential__ProjectId: your-project-id
      SpeechOptions__GoogleCredential__PrivateKeyId: your-private-key-id
      SpeechOptions__GoogleCredential__PrivateKey: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG55b3VyLXByaXZhdGUta2V5LWNvbnRlbnRcbi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS1cbg==
      SpeechOptions__GoogleCredential__ClientEmail: your-service-account@your-project.iam.gserviceaccount.com
      SpeechOptions__GoogleCredential__ClientId: your-client-id
      SpeechOptions__GoogleCredential__AuthUri: https://accounts.google.com/o/oauth2/auth
      SpeechOptions__GoogleCredential__TokenUri: https://oauth2.googleapis.com/token
      SpeechOptions__GoogleCredential__AuthProviderX509CertUrl: https://www.googleapis.com/oauth2/v1/certs
      SpeechOptions__GoogleCredential__ClientX509CertUrl: https://www.googleapis.com/robot/v1/metadata/x509/your-service-account@your-project.iam.gserviceaccount.com
      SpeechOptions__GoogleCredential__UniverseDomain: googleapis.com
    ports:
      - "15400:15400"
    restart: always

  ####################################################
  ################ Databases #########################
  ####################################################
  ai-db:
    image: pgvector/pgvector:pg16
    container_name: ai-db
    environment:
      POSTGRES_DB: ai-database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_HOST: ai-db
      POSTGRES_PORT: 5432
    ports:
      - "5433:5432"
    volumes:
      - ai-db:/var/lib/postgresql/data
    restart: always

  mongo-database:
    image: mongo:latest
    container_name: mongo-database
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - mongo-database:/data/db
    restart: always

  ####################################################
  ############### Extensions #########################
  ####################################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      xpack.security.enabled: false
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
      xpack.security.http.ssl.enabled: false
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.1
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      SERVER_NAME: "kibana"
      XPACK_SECURITY_ENABLED: "false"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    restart: always
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  redis:
    image: redis:latest
    container_name: redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USER: root
      REDIS_PASSWORD: root
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    restart: always

volumes:
  es-data:
  ai-db:
  mongo-database:
  rabbitmq:
  redis:
