name: Build and Push Docker Images to ACR
on:
  push:
    branches:
      - dev
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      ai: ${{ steps.filter.outputs.ai }}
      gw: ${{ steps.filter.outputs.gw }}
      user: ${{ steps.filter.outputs.user }}
      log: ${{ steps.filter.outputs.log }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Detect Changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            ai: 'ai-service/**'
            gw: 'api-gateway/**'
            user: 'user-service/**'
            log: 'log-service/**'

  build-and-push:
    runs-on: ubuntu-latest
    needs: detect-changes
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Log in to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Log in to ACR
      run: az acr login --name ${{ vars.ACR_NAME }}

    # Build & Push AI Service (if changed)
    - name: Build & Push AI Service
      if: needs.detect-changes.outputs.ai == 'true'
      working-directory: ./ai-service
      env:
        ACR_NAME: ${{ vars.ACR_NAME }}
      run: |
        IMAGE_TAG=${ACR_NAME}.azurecr.io/ai-service:latest
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    # Build & Push API Gateway (if changed)
    - name: Build & Push API Gateway
      if: needs.detect-changes.outputs.gw == 'true'
      working-directory: ./api-gateway
      env:
        ACR_NAME: ${{ vars.ACR_NAME }}
      run: |
        IMAGE_TAG=${ACR_NAME}.azurecr.io/api-gateway:latest
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    # Build & Push User Service (if changed)
    - name: Build & Push User Service
      if: needs.detect-changes.outputs.user == 'true'
      working-directory: ./user-service
      env:
        ACR_NAME: ${{ vars.ACR_NAME }}
      run: |
        IMAGE_TAG=${ACR_NAME}.azurecr.io/user-service:latest
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    # Build & Push Log Service (if changed)
    - name: Build & Push Log Service
      if: needs.detect-changes.outputs.log == 'true'
      working-directory: ./log-service
      env:
        ACR_NAME: ${{ vars.ACR_NAME }}
      run: |
        IMAGE_TAG=${ACR_NAME}.azurecr.io/log-service:latest
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    - name: Logout from Azure
      run: az logout
