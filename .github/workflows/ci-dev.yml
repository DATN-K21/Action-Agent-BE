name: Dev CI/CD

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      ai: ${{ steps.filter.outputs.ai }}
      gw: ${{ steps.filter.outputs.gw }}
      user: ${{ steps.filter.outputs.user }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Detect Changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            ai: 'ai-service/**'
            gw: 'api-gateway/**'
            user: 'user-service/**'

  build-and-push:
    runs-on: ubuntu-latest
    needs: detect-changes
    strategy:
      matrix:
        service: [ai-service, api-gateway, user-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to ACR
        if: needs.detect-changes.outputs.${{ matrix.service }} == 'true'
        run: echo "${{ secrets.DEV_ACR_PASSWORD }}" | docker login actionagent.azurecr.io -u ${{ secrets.DEV_ACR_USERNAME }} --password-stdin

      - name: Build & Push Image for ${{ matrix.service }}
        if: needs.detect-changes.outputs.${{ matrix.service }} == 'true'
        run: |
          echo "Building and pushing ${{ matrix.service }} to actionagent.azurecr.io/${{ matrix.service }}:dev"
          docker build -t actionagent.azurecr.io/${{ matrix.service }}:dev ./${{ matrix.service }}
          docker push actionagent.azurecr.io/${{ matrix.service }}:dev

      - name: Send Discord Notification
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"[DEV] Service '${{ matrix.service }}' built and pushed successfully to actionagent.azurecr.io!\nBranch: '${{ github.ref }}'\nCommit: '${{ github.sha }}'\nCommit Message: '${{ github.event.head_commit.message }}'\nBuild Status: Success\nTriggered By: '${{ github.actor }}'\nTime: $(date)\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
