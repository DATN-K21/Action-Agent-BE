{{- if and .Values.pgDatabase.enabled .Values.pgDatabase.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "action-agent.fullname" . }}-pgdb-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: {{ .Values.pgDatabase.persistence.size }}
{{- end }}

{{- if .Values.pgDatabase.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "action-agent.fullname" . }}-pg-database
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app: pg-database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "action-agent.selectorLabels" . | nindent 6 }}
      app: pg-database
  template:
    metadata:
      labels:
        {{- include "action-agent.selectorLabels" . | nindent 8 }}
        app: pg-database
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.pgDatabase.image.repository }}:{{ .Values.pgDatabase.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: postgres
              containerPort: {{ .Values.pgDatabase.service.port }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.pgDatabase.auth.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.pgDatabase.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.pgDatabase.auth.password | quote }}
          resources:
            requests:
              cpu: {{ .Values.pgDatabase.resources.requests.cpu }}
              memory: {{ .Values.pgDatabase.resources.requests.memory }}
            limits:
              cpu: {{ .Values.pgDatabase.resources.limits.cpu }}
              memory: {{ .Values.pgDatabase.resources.limits.memory }}
          {{- if .Values.pgDatabase.persistence.enabled }}
          volumeMounts:
            - name: pgdb-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
      {{- if .Values.pgDatabase.persistence.enabled }}
      volumes:
        - name: pgdb-data
          persistentVolumeClaim:
            claimName: {{ include "action-agent.fullname" . }}-pgdb-pvc
      {{- else }}
      volumes:
        - name: pgdb-data
          emptyDir: {}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "action-agent.fullname" . }}-pg-database
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  type: {{ .Values.pgDatabase.service.type | default "ClusterIP" }}
  selector:
    {{- include "action-agent.selectorLabels" . | nindent 4 }}
    app: pg-database
  ports:
    - name: postgres
      protocol: TCP
      port: {{ .Values.pgDatabase.service.port }}
      targetPort: {{ .Values.pgDatabase.service.port }}
{{- end }}