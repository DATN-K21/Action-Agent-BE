{{- if .Values.extensionService.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "action-agent.fullname" . }}-extension-service
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app: extension-service
spec:
  replicas: {{ .Values.extensionService.replicaCount }}
  selector:
    matchLabels:
      {{- include "action-agent.selectorLabels" . | nindent 6 }}
      app: extension-service
  template:
    metadata:
      labels:
        {{- include "action-agent.selectorLabels" . | nindent 8 }}
        app: extension-service
    spec:
      containers:
        - name: extension-service
          image: "{{ .Values.extensionService.image.repository }}:{{ .Values.extensionService.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.extensionService.service.port }}
              name: http
          env:
            - name: PORT
              value: {{ .Values.extensionService.service.port | quote }}
            - name: DATABASE_URL
              value: {{ .Values.extensionService.database.url | quote }}
          envFrom:
            {{- if .Values.secrets.createSecrets }}
            - secretRef:
                name: {{ include "action-agent.secretName" (dict "root" . "name" "application") }}
            {{- end }}
          resources:
            {{- toYaml .Values.extensionService.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.extensionService.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.extensionService.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "action-agent.fullname" . }}-extension-service
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  type: {{ .Values.extensionService.service.type }}
  selector:
    {{- include "action-agent.selectorLabels" . | nindent 4 }}
    app: extension-service
  ports:
    - protocol: TCP
      port: {{ .Values.extensionService.service.port }}
      targetPort: {{ .Values.extensionService.service.port }}
      name: http

{{- end }}
