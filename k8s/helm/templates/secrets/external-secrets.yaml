{{- if and (not .Values.secrets.createSecrets) (eq .Values.secrets.external.provider "external-secrets") }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "action-agent.secretName" (dict "root" . "name" "infrastructure") }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: {{ .Values.secrets.external.secretStore }}
    kind: SecretStore
  target:
    name: {{ include "action-agent.secretName" (dict "root" . "name" "infrastructure") }}
    creationPolicy: Owner
  data:
    - secretKey: REDIS_PASSWORD
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/redis
        property: password
    - secretKey: REDIS_USER
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/redis
        property: username
    - secretKey: RABBITMQ_DEFAULT_USER
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/rabbitmq
        property: username
    - secretKey: RABBITMQ_DEFAULT_PASS
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/rabbitmq
        property: password
    - secretKey: ELASTIC_PASSWORD
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/elasticsearch
        property: password
    - secretKey: ELASTICSEARCH_USERNAME
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/elasticsearch
        property: username

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "action-agent.secretName" (dict "root" . "name" "application") }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: {{ .Values.secrets.external.secretStore }}
    kind: SecretStore
  target:
    name: {{ include "action-agent.secretName" (dict "root" . "name" "application") }}
    creationPolicy: Owner
  data:
    - secretKey: JWT_SECRET
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/app
        property: jwt-secret
    - secretKey: COMPOSIO_API_KEY
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/app
        property: composio-api-key
    - secretKey: COMPOSIO_API_BASE_URL
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/app
        property: composio-api-base-url

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "action-agent.secretName" (dict "root" . "name" "connections") }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: {{ .Values.secrets.external.secretStore }}
    kind: SecretStore
  target:
    name: {{ include "action-agent.secretName" (dict "root" . "name" "connections") }}
    creationPolicy: Owner
  data:
    - secretKey: REDIS_URL
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/connections
        property: redis-url
    - secretKey: RABBITMQ_URL
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/connections
        property: rabbitmq-url
    - secretKey: ELASTICSEARCH_URL
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/connections
        property: elasticsearch-url

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "action-agent.secretName" (dict "root" . "name" "email") }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: {{ .Values.secrets.external.secretStore }}
    kind: SecretStore
  target:
    name: {{ include "action-agent.secretName" (dict "root" . "name" "email") }}
    creationPolicy: Owner
  data:
    - secretKey: EMAIL_USERNAME
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/email
        property: username
    - secretKey: EMAIL_PASSWORD
      remoteRef:
        key: action-agent/{{ .Values.global.environment }}/email
        property: password

{{- end }}