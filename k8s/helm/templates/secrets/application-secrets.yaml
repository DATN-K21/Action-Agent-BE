{{- /*
-----------------------------------------------------------------
  STATIC SECRETS â€” only for environments where
  `secrets.createSecrets: true`
-----------------------------------------------------------------
*/ -}}
{{- if .Values.secrets.createSecrets }}

# --------------------------------------------------------------
# Infrastructure creds (Redis / RabbitMQ / Elastic)
# --------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "action-agent.fullname" . }}-infrastructure-secret
  namespace: {{ .Values.global.namespace }}
  labels: {{- include "action-agent.labels" . | nindent 4 }}
type: Opaque
stringData:
  # Redis
  REDIS_USER:     {{ .Values.redis.auth.username | quote }}
  REDIS_PASSWORD: {{ .Values.redis.auth.password | quote }}

  # RabbitMQ
  RABBITMQ_DEFAULT_USER: {{ .Values.rabbitmq.auth.username | quote }}
  RABBITMQ_DEFAULT_PASS: {{ .Values.rabbitmq.auth.password | quote }}

  # Elasticsearch
  ELASTICSEARCH_USERNAME: {{ .Values.elasticsearch.auth.username | quote }}
  ELASTIC_PASSWORD:       {{ .Values.elasticsearch.auth.password | quote }}

---
# --------------------------------------------------------------
# Application-level constants (JWT, API keys)
# --------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "action-agent.fullname" . }}-application-secret
  namespace: {{ .Values.global.namespace }}
  labels: {{- include "action-agent.labels" . | nindent 4 }}
type: Opaque
stringData:
  JWT_SECRET:              {{ .Values.config.jwt.secret | quote }}
  COMPOSIO_API_KEY:        {{ .Values.config.composio.apiKey | quote }}
  COMPOSIO_API_BASE_URL:   {{ .Values.config.composio.apiBaseUrl | quote }}
  MICROSERVICE_TIMEOUT:    {{ .Values.config.microserviceTimeout | quote }}

---
# --------------------------------------------------------------
# Connection URLs (internal Pod DNS or external SaaS)
# --------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "action-agent.fullname" . }}-connections-secret
  namespace: {{ .Values.global.namespace }}
  labels: {{- include "action-agent.labels" . | nindent 4 }}
type: Opaque
stringData:
  REDIS_URL: >
    {{- if .Values.redis.enabled }}
    redis://{{ include "action-agent.fullname" . }}-redis:{{ .Values.redis.service.port }}
    {{- else }}
    {{ .Values.externalServices.redisUrl }}
    {{- end }}

  RABBITMQ_URL: >
    {{- if .Values.rabbitmq.enabled }}
    amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@
    {{ include "action-agent.fullname" . }}-rabbitmq:{{ .Values.rabbitmq.service.port }}
    {{- else }}
    {{ .Values.externalServices.rabbitmqUrl }}
    {{- end }}

  ELASTICSEARCH_URL: >
    {{- if .Values.elasticsearch.enabled }}
    http://{{ include "action-agent.fullname" . }}-elasticsearch:{{ .Values.elasticsearch.service.port }}
    {{- else }}
    {{ .Values.externalServices.elasticUrl }}
    {{- end }}

---
# --------------------------------------------------------------
# Email SMTP creds
# --------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "action-agent.fullname" . }}-email-secret
  namespace: {{ .Values.global.namespace }}
  labels: {{- include "action-agent.labels" . | nindent 4 }}
type: Opaque
stringData:
  EMAIL_USERNAME: {{ .Values.config.email.username | quote }}
  EMAIL_PASSWORD: {{ .Values.config.email.password | quote }}

{{- end }}   # createSecrets
