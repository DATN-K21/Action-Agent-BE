{{- if and .Values.infrastructure.elasticsearch.enabled (not .Values.external.elasticsearch.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "action-agent.fullname" . }}-elasticsearch
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: elasticsearch
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "action-agent.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: elasticsearch
  template:
    metadata:
      labels:
        {{- include "action-agent.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: elasticsearch
    spec:
      securityContext:
        {{- toYaml .Values.infrastructure.elasticsearch.podSecurityContext | nindent 8 }}
      containers:
        - name: elasticsearch
          securityContext:
            {{- toYaml .Values.infrastructure.elasticsearch.securityContext | nindent 12 }}
          image: "{{ .Values.infrastructure.elasticsearch.image.repository }}:{{ .Values.infrastructure.elasticsearch.image.tag }}"
          imagePullPolicy: {{ .Values.infrastructure.elasticsearch.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.infrastructure.elasticsearch.service.port }}
              protocol: TCP
            - name: transport
              containerPort: {{ .Values.infrastructure.elasticsearch.service.transportPort }}
              protocol: TCP
          env:
            - name: discovery.type
              value: "single-node"
            - name: xpack.security.enabled
              value: "false"
            - name: xpack.security.http.ssl.enabled
              value: "false"
            - name: ES_JAVA_OPTS
              value: {{ .Values.infrastructure.elasticsearch.javaOpts | quote }}
            {{- range $key, $value := .Values.infrastructure.elasticsearch.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.infrastructure.elasticsearch.resources | nindent 12 }}
          {{- if .Values.infrastructure.elasticsearch.persistence.enabled }}
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
          {{- end }}
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: http
            initialDelaySeconds: 90
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /_cluster/health?wait_for_status=yellow&timeout=1s
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      {{- if .Values.infrastructure.elasticsearch.persistence.enabled }}
      volumes:
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: {{ include "action-agent.fullname" . }}-elasticsearch-pvc
      {{- end }}
      {{- with .Values.infrastructure.elasticsearch.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.infrastructure.elasticsearch.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.infrastructure.elasticsearch.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if .Values.infrastructure.elasticsearch.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "action-agent.fullname" . }}-elasticsearch-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: elasticsearch
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.infrastructure.elasticsearch.persistence.size }}
  {{- if .Values.infrastructure.elasticsearch.persistence.storageClass }}
  storageClassName: {{ .Values.infrastructure.elasticsearch.persistence.storageClass }}
  {{- end }}
{{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "action-agent.fullname" . }}-elasticsearch
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: elasticsearch
spec:
  type: ClusterIP
  ports:
    - name: http
      port: {{ .Values.infrastructure.elasticsearch.service.port }}
      targetPort: http
      protocol: TCP
    - name: transport
      port: {{ .Values.infrastructure.elasticsearch.service.transportPort }}
      targetPort: transport
      protocol: TCP
  selector:
    {{- include "action-agent.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: elasticsearch
{{- end }}
