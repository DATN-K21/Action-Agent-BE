{{- if and .Values.infrastructure.kibana.enabled (not .Values.external.kibana.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "action-agent.fullname" . }}-kibana
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "action-agent.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: kibana
  template:
    metadata:
      labels:
        {{- include "action-agent.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: kibana
    spec:
      securityContext:
        {{- toYaml .Values.infrastructure.kibana.podSecurityContext | nindent 8 }}
      containers:
        - name: kibana
          securityContext:
            {{- toYaml .Values.infrastructure.kibana.securityContext | nindent 12 }}
          image: "{{ .Values.infrastructure.kibana.image.repository }}:{{ .Values.infrastructure.kibana.image.tag }}"
          imagePullPolicy: {{ .Values.infrastructure.kibana.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.infrastructure.kibana.service.port }}
              protocol: TCP
          env:
            {{- if .Values.external.elasticsearch.enabled }}
            - name: ELASTICSEARCH_HOSTS
              value: {{ .Values.external.elasticsearch.url | quote }}
            {{- else if .Values.infrastructure.elasticsearch.enabled }}
            - name: ELASTICSEARCH_HOSTS
              value: "http://{{ include "action-agent.fullname" . }}-elasticsearch:{{ .Values.infrastructure.elasticsearch.service.port }}"
            {{- end }}
            - name: SERVER_NAME
              value: {{ include "action-agent.fullname" . }}-kibana
            - name: XPACK_SECURITY_ENABLED
              value: "false"
            {{- range $key, $value := .Values.infrastructure.kibana.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.infrastructure.kibana.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /api/status
              port: http
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/status
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      {{- with .Values.infrastructure.kibana.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.infrastructure.kibana.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.infrastructure.kibana.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "action-agent.fullname" . }}-kibana
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: kibana
spec:
  type: ClusterIP
  ports:
    - name: http
      port: {{ .Values.infrastructure.kibana.service.port }}
      targetPort: http
      protocol: TCP
  selector:
    {{- include "action-agent.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: kibana
{{- end }}
