{{- if and .Values.infrastructure.rabbitmq.enabled (not .Values.external.rabbitmq.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "action-agent.fullname" . }}-rabbitmq
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "action-agent.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: rabbitmq
  template:
    metadata:
      labels:
        {{- include "action-agent.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: rabbitmq
    spec:
      securityContext:
        {{- toYaml .Values.infrastructure.rabbitmq.podSecurityContext | nindent 8 }}
      containers:
        - name: rabbitmq
          securityContext:
            {{- toYaml .Values.infrastructure.rabbitmq.securityContext | nindent 12 }}
          image: "{{ .Values.infrastructure.rabbitmq.image.repository }}:{{ .Values.infrastructure.rabbitmq.image.tag }}"
          imagePullPolicy: {{ .Values.infrastructure.rabbitmq.image.pullPolicy }}
          ports:
            - name: amqp
              containerPort: {{ .Values.infrastructure.rabbitmq.service.amqpPort }}
              protocol: TCP
            - name: management
              containerPort: {{ .Values.infrastructure.rabbitmq.service.managementPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.infrastructure.rabbitmq.service.metricsPort }}
              protocol: TCP
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: {{ .Values.infrastructure.rabbitmq.auth.username | quote }}
            - name: RABBITMQ_DEFAULT_PASS
              value: {{ .Values.infrastructure.rabbitmq.auth.password | quote }}
            - name: RABBITMQ_DEFAULT_VHOST
              value: {{ .Values.infrastructure.rabbitmq.auth.vhost | quote }}
            {{- range $key, $value := .Values.infrastructure.rabbitmq.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.infrastructure.rabbitmq.resources | nindent 12 }}
          {{- if .Values.infrastructure.rabbitmq.persistence.enabled }}
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
          {{- end }}
          livenessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - -q
                - ping
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 20
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - -q
                - check_port_connectivity
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 20
            failureThreshold: 3
      {{- if .Values.infrastructure.rabbitmq.persistence.enabled }}
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: {{ include "action-agent.fullname" . }}-rabbitmq-pvc
      {{- end }}
      {{- with .Values.infrastructure.rabbitmq.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.infrastructure.rabbitmq.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.infrastructure.rabbitmq.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if .Values.infrastructure.rabbitmq.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "action-agent.fullname" . }}-rabbitmq-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.infrastructure.rabbitmq.persistence.size }}
  {{- if .Values.infrastructure.rabbitmq.persistence.storageClass }}
  storageClassName: {{ .Values.infrastructure.rabbitmq.persistence.storageClass }}
  {{- end }}
{{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "action-agent.fullname" . }}-rabbitmq
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq
spec:
  type: ClusterIP
  ports:
    - name: amqp
      port: {{ .Values.infrastructure.rabbitmq.service.amqpPort }}
      targetPort: amqp
      protocol: TCP
    - name: management
      port: {{ .Values.infrastructure.rabbitmq.service.managementPort }}
      targetPort: management
      protocol: TCP
    - name: metrics
      port: {{ .Values.infrastructure.rabbitmq.service.metricsPort }}
      targetPort: metrics
      protocol: TCP
  selector:
    {{- include "action-agent.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq
{{- end }}
