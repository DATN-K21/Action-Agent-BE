{{- if and .Values.secrets.enabled (eq .Values.secrets.provider "local") }}
{{- range $service, $secrets := .Values.secrets.local }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "action-agent.secretName" (dict "root" $ "service" $service) }}
  namespace: {{ $.Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $service }}
type: Opaque
stringData:
  {{- toYaml $secrets | nindent 2 }}
{{- end }}
{{- end }}

{{- if and .Values.secrets.enabled (eq .Values.secrets.provider "azure") }}
{{- range $service := list "api-gateway" "user-service" "ai-service" "extension-service" }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "action-agent.secretName" (dict "root" $ "service" $service) }}
  namespace: {{ $.Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $service }}
spec:
  refreshInterval: {{ $.Values.secrets.azure.refreshInterval | default "15s" }}
  secretStoreRef:
    name: {{ $.Values.secrets.azure.secretStoreName }}
    kind: SecretStore
  target:
    name: {{ include "action-agent.secretName" (dict "root" $ "service" $service) }}
    creationPolicy: Owner
  data:
    {{- $secretKeys := index $.Values.secrets.azure.secretKeys $service }}
    {{- range $secretKey := $secretKeys }}
    - secretKey: {{ $secretKey.envName }}
      remoteRef:
        key: {{ $secretKey.keyVaultKey }}
    {{- end }}
{{- end }}

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ .Values.secrets.azure.secretStoreName }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  provider:
    azurekv:
      tenantId: {{ .Values.secrets.azure.tenantId }}
      vaultUrl: {{ .Values.secrets.azure.vaultUrl }}
      authType: ManagedIdentity
      identityId: {{ .Values.secrets.azure.managedIdentityClientId }}
{{- end }}
