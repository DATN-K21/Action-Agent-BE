{{- if .Values.aiService.enabled }}
{{- if .Values.aiService.database.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "action-agent.fullname" . }}-ai-database
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app: ai-database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "action-agent.selectorLabels" . | nindent 6 }}
      app: ai-database
  template:
    metadata:
      labels:
        {{- include "action-agent.selectorLabels" . | nindent 8 }}
        app: ai-database
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.aiService.database.image.repository }}:{{ .Values.aiService.database.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5432
              name: postgres
          envFrom:
            {{- if .Values.secrets.createSecrets }}
            - secretRef:
                name: {{ include "action-agent.secretName" (dict "root" . "name" "ai-db") }}
            {{- end }}
          {{- if .Values.aiService.database.persistence.enabled }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
      {{- if .Values.aiService.database.persistence.enabled }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "action-agent.fullname" . }}-ai-database-pvc
      {{- else }}
      volumes:
        - name: postgres-data
          emptyDir: {}
      {{- end }}

{{- if .Values.aiService.database.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "action-agent.fullname" . }}-ai-database-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.aiService.database.persistence.size }}
{{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "action-agent.fullname" . }}-ai-database
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  selector:
    {{- include "action-agent.selectorLabels" . | nindent 4 }}
    app: ai-database
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      name: postgres

{{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "action-agent.fullname" . }}-ai-service
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
    app: ai-service
spec:
  replicas: {{ .Values.aiService.replicaCount }}
  selector:
    matchLabels:
      {{- include "action-agent.selectorLabels" . | nindent 6 }}
      app: ai-service
  template:
    metadata:
      labels:
        {{- include "action-agent.selectorLabels" . | nindent 8 }}
        app: ai-service
    spec:
      containers:
        - name: ai-service
          image: "{{ .Values.aiService.image.repository }}:{{ .Values.aiService.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.aiService.service.port }}
              name: http
          env:
            - name: PORT
              value: {{ .Values.aiService.service.port | quote }}
          envFrom:
            {{- if .Values.secrets.createSecrets }}
            - secretRef:
                name: {{ include "action-agent.secretName" (dict "root" . "name" "ai-service") }}
            {{- end }}
          resources:
            {{- toYaml .Values.aiService.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.aiService.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.aiService.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "action-agent.fullname" . }}-ai-service
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "action-agent.labels" . | nindent 4 }}
spec:
  type: {{ .Values.aiService.service.type }}
  selector:
    {{- include "action-agent.selectorLabels" . | nindent 4 }}
    app: ai-service
  ports:
    - protocol: TCP
      port: {{ .Values.aiService.service.port }}
      targetPort: {{ .Values.aiService.service.port }}
      name: http

{{- end }}
