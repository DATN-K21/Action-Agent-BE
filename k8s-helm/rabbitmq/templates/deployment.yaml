apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rabbitmq.fullname" . }}
  labels:
    {{- include "rabbitmq.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "rabbitmq.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rabbitmq.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: rabbitmq
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: amqp
              containerPort: 5672
              protocol: TCP
            {{- if .Values.management.enabled }}
            - name: management
              containerPort: 15672
              protocol: TCP
            {{- end }}
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "{{ .Values.rabbitmq.username }}"
            - name: RABBITMQ_DEFAULT_PASS
              value: "{{ .Values.rabbitmq.password }}"
            - name: RABBITMQ_ERLANG_COOKIE
              value: "{{ .Values.rabbitmq.erlangCookie }}"
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: {{ include "rabbitmq.fullname" . }}-data
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
